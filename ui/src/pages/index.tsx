import { Button } from '@nextui-org/react';
import axios from 'axios';
import type { GetServerSideProps, NextPage } from 'next'
import { useRouter } from 'next/router';
import Head from 'next/head'

import useSWR from 'swr'

import fetcher from '../utils/fetcher';

type User = {
  _id: string;
  email: string;
  name: string;
  createdAt: Date;
  updatedAt: Date;
  __v: number;
  session: string;
  iat: number;
  exp: number;
  response?: any
}

const Home: NextPage<{ fallbackData: User }> = ({ fallbackData }) => {

  const route = useRouter()

  const { data } = useSWR<User | null>(`${process.env.NEXT_PUBLIC_SERVER_ENDPOINT}/api/me`,
    fetcher,
    { fallbackData })

  const logOut = async () => {
    try {
      await axios(`${process.env.NEXT_PUBLIC_SERVER_ENDPOINT}/api/sessions`, {
        method: 'DELETE',
        withCredentials: true
      })

      route.reload()
    } catch (error: any) {
      console.log(error.response)
    }
  }
  if (data?.response?.status === 403) {
    return (
      <>
        <h3>
          Please login to see content
        </h3>
        <Button.Group color="gradient" ghost>
          <Button onClick={() => route.push('/auth/register')}>Sign up</Button>
          <Button onClick={() => route.push('/auth/login')}>Sign in</Button>
        </Button.Group>
      </>
    )
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>Index page</h1>
      <p>Welcome {data?.name}</p>
      <Button onClick={logOut}>Logout</Button>
    </>
  )
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  const data = await fetcher(
    `${process.env.NEXT_PUBLIC_SERVER_ENDPOINT}/api/me`,
    context.req.headers
  );

  return { props: { fallbackData: data } };
}

export default Home
